/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mio.GUI.form;

import com.mio.BLL.DepartmentBLL;
import com.mio.DTO.Department;
import com.mio.GUI.event.TableActionEvent;
import com.mio.GUI.main.Main;
import com.mio.GUI.swing.TableActionCellEditor;
import com.mio.GUI.swing.TableActionCellRender;
import java.util.List;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author Mio
 */
public class AdminFormDepartment extends javax.swing.JPanel {

    /**
     * Creates new form AdminFormDepartment
     */
    public AdminFormDepartment() {
        initComponents();
        
        menuSplit1.setText("Danh sách khoa");
        table.fixTable(scrollPane);
        
        AdminFormDepartment me = this;
        TableActionEvent event = new TableActionEvent() {
            @Override
            public void onEdit(int row) {
                Main.getInstance().showForm(new AdminFormTeacher(list.get(row), me));
            }
        };
        table.setModel(new MyModel(list = DepartmentBLL.getInstance().getDepartmentList()));
        table.getColumnModel().getColumn(2).setCellRenderer(new TableActionCellRender());
        table.getColumnModel().getColumn(2).setCellEditor(new TableActionCellEditor(event));
        table.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting() && table.getSelectedRow() != -1) {
                    tfName.setText(list.get(table.getSelectedRow()).getName());
                }
            }
        });
    }
    
    private List<Department> list;
    
    private class MyModel extends AbstractTableModel {
        List<Department> list;
        MyModel(List<Department> list) {
            this.list = list;
        }

        @Override
        public String getColumnName(int column) {
            switch (column) {
                case 0 -> {
                    return "Mã số";
                }
                case 1 -> {
                    return "Tên khoa";
                }
                default -> {
                    return "Giáo viên";
                }
            }
        }
        
        
        @Override
        public int getColumnCount() {
            return 3;
        }

        @Override
        public int getRowCount() {
            return list.size();
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Department dep = list.get(rowIndex);
            switch(columnIndex) {
                case 0 -> {
                    return dep.getId();
                }
                case 1 -> {
                    return dep.getName();
                }
                default -> {
                    return null;
                }
            }
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return columnIndex == 2;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuSplit1 = new com.mio.GUI.swing.MenuSplit();
        scrollPane = new javax.swing.JScrollPane();
        table = new com.mio.GUI.swing.MyTable();
        label1 = new com.mio.GUI.swing.Label();
        tfName = new com.mio.GUI.swing.TextField();
        btnAdd = new com.mio.GUI.swing.Button();
        btnEdit = new com.mio.GUI.swing.Button();
        btnDel = new com.mio.GUI.swing.Button();

        setOpaque(false);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên", "Giáo viên"
            }
        ));
        table.getTableHeader().setReorderingAllowed(false);
        scrollPane.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
        }

        label1.setText("Tên khoa:");

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDel.setText("Xoá");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuSplit1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menuSplit1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if(!tfName.getText().isBlank()) {
            Department d = new Department(-1, tfName.getText());
            DepartmentBLL.getInstance().addDepartment(d);
            if(d.getId() != -1) {
                list.add(d);
                ((MyModel)table.getModel()).fireTableRowsInserted(list.size() - 1, list.size() - 1);
            } else {
                Main.getInstance().showNotification(Main.NotificationType.ADD_FAILED);
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        int r = table.getSelectedRow();
        if(r != -1) {
            Department d1 = list.get(r);
            Department d2 = new Department(d1.getId(), tfName.getText());
            if(DepartmentBLL.getInstance().updateDepartment(d2)) {
                d1.setName(d2.getName());
                ((MyModel)table.getModel()).fireTableRowsUpdated(r, r);
            } else {
                Main.getInstance().showNotification(Main.NotificationType.UPDATE_FAILED);
            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        int r = table.getSelectedRow();
        if(r != -1) {
            if(DepartmentBLL.getInstance().delDepartment(list.get(r).getId())) {
                list.remove(r);
                ((MyModel)table.getModel()).fireTableRowsDeleted(r, r);
            } else {
                Main.getInstance().showNotification(Main.NotificationType.DELETE_FAILED);
            }
        }
    }//GEN-LAST:event_btnDelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.mio.GUI.swing.Button btnAdd;
    private com.mio.GUI.swing.Button btnDel;
    private com.mio.GUI.swing.Button btnEdit;
    private com.mio.GUI.swing.Label label1;
    private com.mio.GUI.swing.MenuSplit menuSplit1;
    private javax.swing.JScrollPane scrollPane;
    private com.mio.GUI.swing.MyTable table;
    private com.mio.GUI.swing.TextField tfName;
    // End of variables declaration//GEN-END:variables
}
