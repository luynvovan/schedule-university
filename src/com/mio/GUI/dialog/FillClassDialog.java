
package com.mio.GUI.dialog;

import com.mio.BLL.StudentGroupBLL;
import com.mio.DTO.CourseClass;
import com.mio.DTO.StudentGroup;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.table.AbstractTableModel;

public class FillClassDialog extends JDialog {
    private int x, y;
    public FillClassDialog(java.awt.Frame parent, List<List<CourseClass>> coursesByGroups) {
        super(parent, true);
        initComponents();
        setBackground(new Color(0, 0, 0, 0));
        addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                x = e.getX();
                y = e.getY();
            }
            
        });
        
        FillClassDialog me = this;
        addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                me.setLocation(e.getXOnScreen() - x, e.getYOnScreen() - y);
            }
            
        });
        menuSplit1.setText("Chọn các nhóm lớp");
        table.fixTable(scroll);
        
        this.coursesByGroups = coursesByGroups;
        this.chosens = new boolean[coursesByGroups.size()];
        for(int i = 0; i != chosens.length; ++i) {
            chosens[i] = true;
        }
        table.setModel(new MyModel(coursesByGroups, this.chosens));
    }
    List<List<CourseClass>> coursesByGroups;
    boolean[] chosens;
    private class MyModel extends AbstractTableModel {
        List<List<CourseClass>> coursesByGroups;
        boolean[] chosens;
        HashMap<Integer, StudentGroup> sgs;
        
        MyModel(List<List<CourseClass>> coursesByGroups, boolean[] chosens) {
            this.coursesByGroups = coursesByGroups;
            this.chosens = chosens;
            sgs = new HashMap<>();
            for(List<CourseClass> ccs: coursesByGroups) {
                StudentGroup sg = StudentGroupBLL.getInstance().getStudentGroup(ccs.get(0).getStudentGroupId().get(0));
                sgs.put(sg.getId(), sg);
            }
        }

        @Override
        public String getColumnName(int column) {
            switch (column) {
                case 0 -> {
                    return "Mã số nhóm";
                }
                case 1 -> {
                    return "Tên nhóm";
                }
                case 2 -> {
                    return "Số môn";
                }
                default -> {
                    return "Chọn";
                }
            }
        }
        
        
        @Override
        public int getColumnCount() {
            return 4;
        }

        @Override
        public int getRowCount() {
            return coursesByGroups.size();
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            List<CourseClass> row = coursesByGroups.get(rowIndex);
            switch(columnIndex) {
                case 0 -> {
                    return row.get(0).getStudentGroupId().get(0);
                }
                case 1 -> {
                    return sgs.get(row.get(0).getStudentGroupId().get(0)).getName();
                }
                case 2 -> {
                    return row.size();
                }
                default -> {
                    if(chosens[rowIndex]) {
                        return "Chọn";
                    } else {
                        return "Loại";
                    }
                }
            }
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return false;
        }
    }

    private List<List<CourseClass>> rtn;
    
    public List<List<CourseClass>> showDialog() {
        setVisible(true);
        return rtn;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBorder1 = new com.mio.GUI.swing.PanelBorder();
        panelBorder2 = new com.mio.GUI.swing.PanelBorder();
        btnOk = new com.mio.GUI.swing.Button();
        btnCancel = new com.mio.GUI.swing.Button();
        menuSplit1 = new com.mio.GUI.swing.MenuSplit();
        btnChooseAll = new com.mio.GUI.swing.Button();
        btnUnChooseAll = new com.mio.GUI.swing.Button();
        btnChoose = new com.mio.GUI.swing.Button();
        scroll = new javax.swing.JScrollPane();
        table = new com.mio.GUI.swing.MyTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        panelBorder2.setBackground(new java.awt.Color(44, 116, 179));

        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setText("Hủy");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnChooseAll.setText("Chọn tất cả");
        btnChooseAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseAllActionPerformed(evt);
            }
        });

        btnUnChooseAll.setText("Bỏ chọn tất cả");
        btnUnChooseAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnChooseAllActionPerformed(evt);
            }
        });

        btnChoose.setText("Chọn");
        btnChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scroll.setViewportView(table);

        javax.swing.GroupLayout panelBorder2Layout = new javax.swing.GroupLayout(panelBorder2);
        panelBorder2.setLayout(panelBorder2Layout);
        panelBorder2Layout.setHorizontalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addComponent(menuSplit1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addComponent(btnChooseAll, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUnChooseAll, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        panelBorder2Layout.setVerticalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addComponent(menuSplit1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChooseAll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUnChooseAll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChoose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addGap(20, 20, 20)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        rtn = new ArrayList<>();
        for(int i = 0; i != chosens.length; ++i) {
            if(chosens[i]) {
                rtn.add(coursesByGroups.get(i));
            }
        }
        this.dispose();
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        rtn = null;
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnChooseAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseAllActionPerformed
        for(int i = 0; i != chosens.length; ++i) {
            chosens[i] = true;
        }
        ((AbstractTableModel)table.getModel()).fireTableDataChanged();
    }//GEN-LAST:event_btnChooseAllActionPerformed

    private void btnUnChooseAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnChooseAllActionPerformed
        for(int i = 0; i != chosens.length; ++i) {
            chosens[i] = false;
        }
        ((AbstractTableModel)table.getModel()).fireTableDataChanged();
    }//GEN-LAST:event_btnUnChooseAllActionPerformed

    private void btnChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseActionPerformed
        int row = table.getSelectedRow();
        if(row != -1) {
            chosens[row] = !chosens[row];
            ((AbstractTableModel)table.getModel()).fireTableRowsUpdated(row, row);
        }
    }//GEN-LAST:event_btnChooseActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.mio.GUI.swing.Button btnCancel;
    private com.mio.GUI.swing.Button btnChoose;
    private com.mio.GUI.swing.Button btnChooseAll;
    private com.mio.GUI.swing.Button btnOk;
    private com.mio.GUI.swing.Button btnUnChooseAll;
    private com.mio.GUI.swing.MenuSplit menuSplit1;
    private com.mio.GUI.swing.PanelBorder panelBorder1;
    private com.mio.GUI.swing.PanelBorder panelBorder2;
    private javax.swing.JScrollPane scroll;
    private com.mio.GUI.swing.MyTable table;
    // End of variables declaration//GEN-END:variables
}
